{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","httpGet","window","location","protocol","useState","news","setNews","searcQuery","setSearchQuery","url","setUrl","laoding","setLoading","useEffect","fetch","then","result","json","data","hits","catch","error","console","log","onSubmit","e","preventDefault","type","value","onChange","evnt","target","map","nItem","idx","title","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAAe,I,YCsGAA,EAhGH,WACV,IAAIC,EAAUC,OAAOC,SAASC,SAC9B,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAqCF,mBAAS,SAA9C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAsBJ,mBAAS,GAAD,OAAIJ,EAAJ,+CAA9B,mBAAOS,EAAP,KAAYC,EAAZ,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAWAC,qBAAU,WARRD,GAAW,GACXE,MAAML,GACLM,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UAEtBF,MAAK,SAAAG,GAAI,OAAKZ,EAAQY,EAAKC,MAAOP,GAAW,MAC7CQ,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,uBAK3B,CAACd,IAYJ,OACE,gCACE,oCACCE,EAAU,8CACX,GAEA,gCACA,uBAAMa,SAZW,SAACC,GACpBA,EAAEC,iBACFhB,EAAO,6CAAD,OAA8CH,KAUlD,UACE,uBAAOoB,KAAK,OAAOC,MAAOrB,EAAYsB,SAlBvB,SAACC,GACpBtB,EAAesB,EAAKC,OAAOH,UAkBvB,+CAGFvB,EAAK2B,KAAI,SAACC,EAAOC,GACf,OACE,4BAAcD,EAAME,OAAZD,aCtCHE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.32618ba2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { Component, useEffect } from 'react';\nimport { useState } from 'react';\n\n\nconst App = () => {\n  let httpGet = window.location.protocol;\n  const [news, setNews] = useState([]);\n  const [searcQuery, setSearchQuery] = useState('react');\n  const [url, setUrl] = useState(`${httpGet}//hn.algolia.com/api/v1/search?query=react`);\n  const [laoding, setLoading] = useState(false);\n\n  const fetchNews = () => {\n    setLoading(true);\n    fetch(url)\n    .then(result => result.json())\n    // .then(data => console.log(data))\n    .then(data => (setNews(data.hits), setLoading(false)))\n    .catch(error => console.log('Error aaya hai'))\n  }\n\n  useEffect(()=>{\n    fetchNews();\n  }, [url])\n\n  const handleChange = (evnt) => {\n    setSearchQuery(evnt.target.value);\n    // setNews(data.hits)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setUrl(`http://hn.algolia.com/api/v1/search?query=${searcQuery}`)\n  }\n\n  return(\n    <div>\n      <h2>Hi</h2>\n      {laoding ? <h1>Loading.....</h1> : \n      \"\"\n      }\n      <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={searcQuery} onChange={handleChange} />\n        <button>Search</button>\n      </form>\n      {\n      news.map((nItem, idx)=>{\n        return(\n          <p key={idx}>{nItem.title}</p>\n        )\n      })\n      }\n      </div>\n    </div>\n  )\n\n\n}\n\n// class App extends Component{\n//   state = {\n//     count : 0\n//   } \n\n//   counterIn = () => {\n//     this.setState({\n//       count : this.state.count + 1\n//     })\n//   }\n\n//   render(){\n//       return (\n//       <div className=\"App\">\n//         <h1>{this.state.count}</h1>\n//         <button onClick={this.counterIn}>Increase counter</button>\n//       </div>\n//     );\n//   }\n// }\n\n// function App(){\n//   const[counter, setCounter] = useState(0);\n\n//   // useEffect(()=>{\n//   // })\n//   document.title = `counter ${counter}`\n\n//   const counterIn = () => {\n//     setCounter( counter + 1)\n//   }\n\n//   return (\n//       <div className=\"App\">\n//         <h1>{counter}</h1>\n//       <button onClick={counterIn}>Increase counter</button>\n//     </div>\n//   );\n// }\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}